import { AnalysisResult } from '../../types';
import { AIProviderService } from "./types";

const mockDelay = (ms: number) => new Promise(res => setTimeout(res, ms));

export const analyzeDocument: AIProviderService['analyzeDocument'] = async (
    documentContent,
    persona,
    settings,
    customPrompt,
): Promise<AnalysisResult> => {
    console.log("Using Mock HuggingFace Service");
    // TODO: Implement actual HuggingFace Inference API call here.
    // This would likely use a specific model endpoint and an API token from environment variables.
    await mockDelay(1500);

    return {
        summary: `[Mock HuggingFace] This is a summary generated by a HuggingFace model for a ${persona}.`,
        keyRequirements: [
            "[Mock HuggingFace] A key requirement is performance.",
        ],
        risks: [
            "[Mock HuggingFace] A risk is the availability of skilled personnel.",
        ],
        recommendations: [
            "[Mock HuggingFace] A recommendation is to start a pilot project.",
        ],
    };
};

export const generateDiagram: AIProviderService['generateDiagram'] = async (prompt, settings): Promise<string> => {
    console.log("Using Mock HuggingFace Service for diagrams");
    // TODO: Find a suitable HuggingFace model and implement the API call.
    await mockDelay(1000);

    return `\`\`\`mermaid
graph TD
    A[Mock HuggingFace] --> B{User Input: ${prompt}};
    B --> C[Diagram Code Output];
\`\`\``;
};
